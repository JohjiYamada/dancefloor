{"version":3,"sources":["components/common/EnhancedTextField.jsx","components/common/EnhancedForm.jsx","components/common/SearchBar.jsx","components/common/EnhancedTable.jsx","customer/CustomerPage.jsx","customer/CustomerPage2.jsx","customer/SamplePage.jsx","components/common/Navbar.jsx","App.jsx","serviceWorker.js","index.jsx"],"names":["customTextField","props","InputProps","others","className","label","style","isReadOnly","variant","TextField","InputLabelProps","shrink","inputProps","readOnly","withRouter","headCell","result","setResult","isEdit","isNew","getStringFromDate","selection","changeSelection","getSelectionValue","inputLabel","React","useRef","useState","labelWidth","setLabelWidth","useEffect","current","offsetWidth","show","type","helperText","error","errorDetails","field","FormControl","InputLabel","htmlFor","id","ref","Select","value","onChange","e","input","OutlinedInput","notched","name","selectionEnum","map","item","MenuItem","selectionValue","dispName","FormHelperText","changeText","target","now","Date","hourStr","Math","floor","getTimezoneOffset","slice","minutesStr","getTextFieldValue","datePicker","key","customInput","thousandSeparator","onValueChange","values","defaultValue","useStyles","makeStyles","theme","margin","spacing","headCells","title","finalize","apiUrl","edit","setEdit","JSON","parse","stringify","original","classes","event","Typography","component","Fragment","ButtonGroup","color","aria-label","Button","size","startIcon","onClick","axios","post","then","res","data","catch","err","console","log","Error","FormControlLabel","control","Switch","checked","delete","head","root","padding","display","alignItems","width","marginLeft","flex","iconButton","Search","handleSearch","keyword","setKeyword","Paper","InputBase","defalutValue","onKeyDown","keyCode","IconButton","EnhancedTableHead","onSelectAllClick","order","orderBy","numSelected","rowCount","onRequestSort","TableHead","TableRow","TableCell","Checkbox","indeterminate","align","numeric","sortDirection","TableSortLabel","active","direction","property","visuallyHidden","EnhancedTableToolbar","handleNewOpen","handleDelOpen","paddingLeft","paddingRight","highlight","palette","secondary","main","backgroundColor","lighten","light","text","primary","dark","useToolbarStyles","Toolbar","clsx","Tooltip","keywork","EnhancedTableCell","row","selected","labelId","setSelected","history","handleClickDetail","getStringFromDateGrid","elem","isItemSelected","indexOf","selectedIndex","newSelected","concat","length","handleClickCheck","link","push","displayType","table","header","setHeadCells","focus","setFocus","isNotNew","setIsNotNew","setOrder","setOrderBy","page","setPage","rowsPerPage","setRowsPerPage","open","setOpen","delOpen","setDelOpen","results","setResults","setSelection","paper","marginBottom","minWidth","border","clip","height","overflow","position","top","initializeTable","d","date","toLocaleString","toLocaleDateString","enumKey","checkMatch","cellValue","selVal","toLowerCase","includes","dayVal","toString","descendingComparator","a","b","get","res2","Object","keys","res3","assign","handleClose","handleDelClose","emptyRows","min","newObj","forEach","newResults","match","TableContainer","Table","aria-labelledby","newSelecteds","n","TableBody","array","comparator","stabilizedThis","el","index","sort","stableSort","getComparator","hover","role","aria-checked","tabIndex","colSpan","TablePagination","rowsPerPageOptions","count","onChangePage","newPage","onChangeRowsPerPage","parseInt","Dialog","onClose","maxWidth","DialogTitle","DialogContent","year_str","getFullYear","month_str","getMonth","day_str","getDate","hour_str","getHours","minute_str","getMinutes","second_str","getSeconds","format_str","replace","DialogActions","keepMounted","aria-describedby","DialogContentText","headers","tableOption","tableOption2","Container","disablePadding","Navbar","to","Component","createMuiTheme","blue","red","App","exact","path","CustomerPage","CustomerPage2","SamplePage","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.ceeeff3f.chunk.js","sourcesContent":["import React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport { withRouter } from 'react-router';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport OutlinedInput from \"@material-ui/core/OutlinedInput\";\nimport NumberFormat from 'react-number-format';\n\n\n//const textFielda = (props) => {\n//\tconst { className, label, style, isReadOnly,...other } = props;\n//\treturn\t<TextField \n//\t\t\t\t{...other}\n//\t\t\t\tclassName={className}\n//\t\t\t\tlabel={headCell.label}\n//\t\t\t\tstyle={headCell.style}\n//\t\t\t\tInputLabelProps={{ shrink: true }}\n//\t\t\t\tinputProps={{ readOnly: isReadOnly }}\n//\t\t\t\t{...(isReadOnly ? {} : { variant: \"outlined\" })}\n//\t\t\t/>\n\nconst customTextField = (props) => {\n\tconst { InputProps, className, label, style, isReadOnly, variant, ...others } = props;\n\treturn\t<TextField \n\t\t\t\t{...others}\n\t\t\t\tclassName={InputProps.className}\n\t\t\t\tlabel={InputProps.label}\n\t\t\t\tstyle={InputProps.style}\n\t\t\t\tInputLabelProps={{ shrink: true }}\n\t\t\t\tinputProps={{ readOnly: InputProps.isReadOnly }}\n\t\t\t\tvariant={InputProps.variant}\n\t\t\t/>\n}\n\nconst EnhancedTextField = (props) => {\n\tconst { className, headCell, result, setResult, isEdit, isNew, getStringFromDate, selection, changeSelection, getSelectionValue } = props;\n\tconst inputLabel = React.useRef(null);\n\tconst [labelWidth, setLabelWidth] = React.useState(0);\n\tReact.useEffect(() => {\n\t\tif (!!inputLabel.current) {\n\t\t\tsetLabelWidth(inputLabel.current.offsetWidth);\n\t\t}\n\t}, [isEdit, isNew]);\n\n\tif (!headCell.show) {\n\t\treturn \"\";\n\t}\n\tif (headCell.type === \"special\") {\n\t\treturn \"\";\n\t}\n\n\tif (isNew && (headCell.type === 'id' || headCell.type === 'prcDate' || headCell.type === 'prcUser')) {\n\t\treturn \"\";\n\t}\n\n\tif (!result) {\n\t\treturn \"loading...\";\n\t}\n\n\tconst isReadOnly = !((isEdit || isNew) && (headCell.type != 'id' && headCell.type != 'prcUser' && headCell.type != 'prcDate'));\n\n\tlet helperText = \"\";\n\tlet error = {};\n\tif(!!result.errorDetails && !!result.errorDetails[headCell.field]) {\n\t\terror = {error: true};\n\t\thelperText = result.errorDetails[headCell.field];\n\t}\n\n\tif (headCell.type === 'selection') {\n\t\treturn \t<FormControl \n\t\t\t\t\t{...(isReadOnly ? {} : { variant: \"outlined\" })}\n\t\t\t\t\tclassName={className}\n\t\t\t\t\t{...error}\n\t\t\t\t>\n\t\t\t\t\t<InputLabel\n\t\t\t\t\t\thtmlFor={headCell.id}\n\t\t\t\t\t\tshrink\n\t\t\t\t\t\tref={inputLabel}\n\t\t\t\t\t\t{...error}\n\t\t\t\t\t>{headCell.label}</InputLabel>\n\t\t\t\t\t<Select\n\t\t\t\t\t\tstyle={headCell.style}\n\t\t\t\t\t\tid={headCell.id + \"sel\"}\n\t\t\t\t\t\tvalue={result[headCell.field]}\n\t\t\t\t\t\tonChange={(e) => changeSelection(headCell.field, e)}\n\t\t\t\t\t\tlabel={headCell.label}\n\t\t\t\t\t\tinputProps={{ readOnly: isReadOnly }}\n\t\t\n\t\t\t\t\t\t{...(isReadOnly ? {} : {input: \n\t\t\t\t\t\t\t<OutlinedInput\n\t\t\t\t\t\t\t\tnotched=\"true\"\n\t\t\t\t\t\t\t\tlabelWidth={labelWidth}\n\t\t\t\t\t\t\t\tname={headCell.label}\n\t\t\t\t\t\t\t\tid={headCell.id}\n\t\t\t\t\t\t\t\t{...error}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t>\n\t\t\t\t\t\t{selection[headCell.selectionEnum].map((item) => {\n\t\t\t\t\t\t\treturn <MenuItem\n\t\t\t\t\t\t\t\t\t\t{...(isReadOnly ? {} : { variant: \"outlined\" })}\n\t\t\t\t\t\t\t\t\t\tvalue={item.selectionValue}\n\t\t\t\t\t\t\t\t\t\tstyle={headCell.style} \n\t\t\t\t\t\t\t\t\t>{item.dispName}</MenuItem>\n\t\t\t\t\t\t})}\n\t\t\t\t\t</Select>\n\t\t\t\t\t<FormHelperText>{helperText}</FormHelperText>\n\t\t\t\t</FormControl >\n\t}\n\n\tconst changeText = (e) => {\n\t\tlet value = e.target.value;\n\t\tif (headCell.type === 'dateTime' || headCell.type === 'prcDate') {\n\t\t\tconst now = new Date();\n\t\t\tconst hourStr = ('0' + Math.floor(now.getTimezoneOffset()/(-1 * 60))).slice(-2);\n\t\t\tconst minutesStr = ('0' + Math.floor(now.getTimezoneOffset()%(-1 * 60))).slice(-2);\n\t\t\tvalue = e.target.value + \".000+\"+hourStr+\":\"+minutesStr;\n\t\t}\n\t\tsetResult({\n\t\t\t...result,\n\t\t\t[headCell.field]: value\n\t\t});\n\t};\n\n\tconst getTextFieldValue = () => {\n\t\tif (headCell.type === \"date\" || headCell.type === \"dateTime\" || headCell.type === \"prcDate\" || headCell.type === 'time') {\n\t\t\treturn getStringFromDate(result[headCell.field], headCell.type);\n\t\t} else if (headCell.type === \"selection\") {\n\t\t\treturn getSelectionValue(result[headCell.field], headCell.selectionEnum);\n\t\t} else {\n\t\t\treturn result[headCell.field];\n\t\t}\n\t}\n\n\tlet datePicker = {};\n\tif (headCell.type === 'dateTime' || headCell.type === 'prcDate') {\n\t\tdatePicker = { type: \"datetime-local\" };\n\t} else if (headCell.type === 'date') {\n\t\tdatePicker = { type: \"date\" };\n\t} else if (headCell.type === 'time') {\n\t\tdatePicker = { type: \"time\" };\n\t}\n\n\tif(headCell.type === 'number' || headCell.type === 'price'){\n\t\treturn \t<NumberFormat\n\t\t\t\t\t\tkey={headCell.id}\n\t\t\t\t\t\tcustomInput={customTextField}\n\t\t\t\t\t\tclassName={className}\n\t\t\t\t\t\tInputProps={{\n\t\t\t\t\t\t\t...error,\n\t\t\t\t\t\t\thelperText: helperText,\n\t\t\t\t\t\t\tclassName: className,\n\t\t\t\t\t\t\tlabel: headCell.label,\n\t\t\t\t\t\t\tstyle: headCell.style,\n\t\t\t\t\t\t\tisReadOnly: isReadOnly,\n\t\t\t\t\t\t\tinputProps: {readOnly: isReadOnly},\n\t\t\t\t\t\t\t...(isReadOnly ? {} : { variant: \"outlined\"})\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tvalue={getTextFieldValue()}\n\t\t\t\t\t\tthousandSeparator\n\t\t\t\t\t\t{...(isReadOnly ? {} : {variant: \"outlined\"})}\n\t\t\t\t\t\tonValueChange={(values) => {\n\t\t\t\t\t\t\tchangeText({\n\t\t\t\t\t\t\t\t\ttarget: {\n\t\t\t\t\t\t\t\t\t\tvalue: values.value\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t})}}\n\t\t\t\t\t/>\n\t}\n\n\n//\tconst inputProps = (headCell.type === 'number' || headCell.type === 'price') ? { inputComponent: NumberFormatCustom, readOnly: isReadOnly } : { readOnly: isReadOnly }\n\n\treturn <TextField\n\t\t{...error}\n\t\tclassName={className}\n\t\tid={headCell.id}\n\t\tkey={headCell.id}\n\t\tlabel={headCell.label}\n\t\tonChange={changeText}\n\t\tdefaultValue={getTextFieldValue()}\n\t\tstyle={headCell.style}\n\t\tInputLabelProps={{ shrink: true }}\n\t\tinputProps={{ readOnly: isReadOnly }}\n\t\t{...datePicker}\n\t\t{...(isReadOnly ? {} : { variant: \"outlined\" })}\n\t\thelperText = {helperText}\n\t/>\n}\n\nexport default withRouter(EnhancedTextField);\n","import React from 'react';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { withRouter } from 'react-router';\nimport Typography from '@material-ui/core/Typography';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport SaveIcon from '@material-ui/icons/Save';\nimport CloseIcon from '@material-ui/icons/Close';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport axios from 'axios'\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport EnhancedTextField from './EnhancedTextField'\n\n\nconst useStyles = makeStyles((theme) => ({\n\tmargin: {\n\t\tmargin: theme.spacing(1),\n\t},\n}));\n\nconst EnhancedForm = (props) => {\n\tconst { headCells, result, title, setResult, finalize, isNew, apiUrl, getSelectionValue, getStringFromDate, selection } = props;\n\tconst [edit, setEdit] = React.useState(false);\n\tconst [original] = React.useState(JSON.parse(JSON.stringify(result)));\n\tconst classes = useStyles();\n\n\tconst handleChangeEdit = (event) => {\n\t\tsetEdit(event.target.checked);\n\t\tsetResult(JSON.parse(JSON.stringify(original)));\n\t};\n\n\tconst handleUpdate = (e) => {\n\t\taxios.post(apiUrl + result.id, result)\n\t\t\t.then(res => {\n\t\t\t\tsetResult(res.data);\n\t\t\t\tif(!res.data.errorDetails){\n\t\t\t\tsetEdit(false);\n\t\t\t\t\tif (!!finalize) {\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(err => {\n\t\t\t\tconsole.log(err);\n\t\t\t\tnew Error(err);\n\t\t\t})\n\t};\n\n\tconst handleNew = (e) => {\n\t\taxios.post(apiUrl, result)\n\t\t\t.then(res => {\n\t\t\t\tsetResult(res.data);\n\t\t\t\tif(!res.data.errorDetails){\n\t\t\t\t\tif (!!finalize) {\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t})\n\t\t\t.catch(err => {\n\t\t\t\tconsole.log(err);\n\t\t\t\tnew Error(err);\n\t\t\t})\n\t};\n\n\tconst handleDelete = () => {\n\t\taxios.delete(apiUrl + result.id)\n\t\t\t.then(res => {\n\t\t\t\tfinalize();\n\t\t\t})\n\t\t\t.catch(err => new Error(err))\n\n\t}\n\n\tconst changeSelection = (field, event) => {\n\t\tsetResult({\n\t\t\t...result,\n\t\t\t[field]: event.target.value\n\t\t});\n\t\t\n//\t\tconst value = JSON.parse(JSON.stringify(result));\n//\t\tvalue[field] = event.target.value;\n//\t\tsetResult(value);\n\t}\n\n\tif (!result) {\n\t\treturn \"loading...\";\n\t}\n\n\treturn (\n\t\t<form className={classes.margin}  >\n\t\t\t{title === null ? (\"\") : (\n\t\t\t\t<Typography variant=\"h6\" id=\"formTitle\" component=\"div\">\n\t\t\t\t\t{title}\n\t\t\t\t</Typography>\n\t\t\t)}\n\t\t\t{!isNew ? (\n\t\t\t\t<React.Fragment>\n\t\t\t\t\t<FormControlLabel\n\t\t\t\t\t\tkey=\"editSwitch\"\n\t\t\t\t\t\tcontrol={<Switch checked={edit} onChange={handleChangeEdit} />}\n\t\t\t\t\t\tlabel=\"編集\"\n\t\t\t\t\t/>\n\t\t\t\t\t<ButtonGroup color=\"primary\" aria-label=\"outlined primary button group\" className={classes.margin} >\n\t\t\t\t\t\t{edit ? (\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\t\tstartIcon={<SaveIcon />}\n\t\t\t\t\t\t\t\tonClick={handleUpdate}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t更新\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t) : (\"\")}\n\t\t\t\t\t\t{edit ? (\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\t\tstartIcon={<DeleteIcon />}\n\t\t\t\t\t\t\t\tonClick={handleDelete}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t削除\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t) : ('')}\n\t\t\t\t\t</ButtonGroup>\n\t\t\t\t</React.Fragment>\n\t\t\t) : (\n\t\t\t\t<React.Fragment>\n\t\t\t\t\t<ButtonGroup color=\"primary\" aria-label=\"outlined primary button group\" className={classes.margin}>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\tstartIcon={<SaveIcon />}\n\t\t\t\t\t\t\tonClick={handleNew}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t新規登録\n\t\t\t\t\t</Button>\n\t\t\t\t\t</ButtonGroup>\n\t\t\t\t</React.Fragment>\n\t\t\t)}\n\t\t\t\t<br />\n\t\t\t\t<React.Fragment>\n\t\t\t\t\t{headCells.map((head) => {\n\t\t\t\t\t\treturn <EnhancedTextField \n\t\t\t\t\t\t\tclassName={classes.margin}\n\t\t\t\t\t\t\theadCell={head}\n\t\t\t\t\t\t\tresult={result}\n\t\t\t\t\t\t\tsetResult={setResult}\n\t\t\t\t\t\t\tisEdit={edit}\n\t\t\t\t\t\t\tisNew={isNew}\n\t\t\t\t\t\t\tgetStringFromDate={getStringFromDate}\n\t\t\t\t\t\t\tselection={selection}\n\t\t\t\t\t\t\tchangeSelection={changeSelection}\n\t\t\t\t\t\t\tgetSelectionValue={getSelectionValue}\n\t\t\t\t\t\t/>\n\t\t\t\t\t})}\n\t\t\t\t</React.Fragment>\n\t\t</form>\n\t);\n}\n\nexport default withRouter(EnhancedForm);\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\troot: {\r\n\t\tpadding: '2px 4px',\r\n\t\tdisplay: 'flex',\r\n\t\talignItems: 'center',\r\n\t\twidth: 400,\r\n\t},\r\n\tinput: {\r\n\t\tmarginLeft: theme.spacing(1),\r\n\t\tflex: 1,\r\n\t},\r\n\ticonButton: {\r\n\t\tpadding: 10,\r\n\t},\r\n/*\tdivider: {\r\n\t\theight: 28,\r\n\t\tmargin: 4,\r\n\t},\r\n*/}));\r\n\r\nconst Search = (props) => {\r\n\tconst { handleSearch, keyword, setKeyword } = props;\r\n\tconst classes = useStyles();\r\n\r\n\tconst handleChangeKeyword = (event) => {\r\n\t\tsetKeyword(event.target.value);\r\n\t}\r\n\r\n\tconst sendCommand = (e) => {\r\n\t\tconst ENTER = 13;\r\n\t\tif (e.keyCode === ENTER) {\r\n\t\t\thandleSearch();\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Paper className={classes.root} variant=\"outlined\">\r\n\t\t\t<InputBase\r\n\t\t\t\tclassName={classes.input}\r\n\t\t\t\tinputProps={{ 'aria-label': '検索' }}\r\n\t\t\t\tonChange={handleChangeKeyword}\r\n\t\t\t\tdefalutValue={keyword}\r\n\t\t\t\tonKeyDown={sendCommand}\r\n\t\t\t/>\r\n\t\t\t<IconButton onClick={handleSearch}\r\n\t\t\t\t\t\tclassName={classes.iconButton}\r\n\t\t\t\t\t\taria-label=\"search\"\r\n\t\t\t>\r\n\t\t\t\t<SearchIcon />\r\n\t\t\t</IconButton>\r\n\t\t</Paper>\r\n\t);\r\n}\r\n\r\nexport default Search;\r\n\r\n\r\n/*\t\t\t<Divider className={classes.divider} orientation=\"vertical\" />\r\n\t\t\t<IconButton color=\"primary\" className={classes.iconButton} aria-label=\"詳細検索\">\r\n\t\t\t\t<DirectionsIcon />\r\n\t\t\t</IconButton>\r\n*/\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios'\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport SubjectIcon from '@material-ui/icons/Subject';\r\nimport { withRouter } from 'react-router';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Button from '@material-ui/core/Button';\r\nimport EnhancedForm from './EnhancedForm';\r\nimport Search from './SearchBar';\r\nimport NumberFormat from 'react-number-format';\r\n\r\n\r\nconst EnhancedTableHead = (props) => {\r\n\tconst { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort, headCells } = props;\r\n\tconst createSortHandler = (property) => (event) => {\r\n\t\tonRequestSort(event, property);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<TableHead>\r\n\t\t\t<TableRow>\r\n\r\n\t\t\t\t{headCells.map((headCell) => {\r\n\t\t\t\t\tif(headCell.show){\r\n\t\t\t\t\t\tif(headCell.type == 'special'){\r\n\t\t\t\t\t\t\tif (headCell.id == \"_checkBox\") {\r\n\t\t\t\t\t\t\t\treturn <TableCell padding=\"checkbox\">\r\n\t\t\t\t\t\t\t\t\t<Checkbox\r\n\t\t\t\t\t\t\t\t\t\tindeterminate={numSelected > 0 && numSelected < rowCount}\r\n\t\t\t\t\t\t\t\t\t\tchecked={rowCount > 0 && numSelected === rowCount}\r\n\t\t\t\t\t\t\t\t\t\tonChange={onSelectAllClick}\r\n\t\t\t\t\t\t\t\t\t\tinputProps={{ 'aria-label': 'select all desserts' }} />\r\n\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\treturn <TableCell padding=\"checkbox\"></TableCell>\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\treturn <TableCell\r\n\t\t\t\t\t\t\t\tkey={headCell.id}\r\n\t\t\t\t\t\t\t\talign={headCell.numeric ? 'right' : 'left'}\r\n\t\t\t\t\t\t\t\t//\t\t\tpadding={headCell.disablePadding ? 'none' : 'default'}\r\n\t\t\t\t\t\t\t\tpadding='default'\r\n\t\t\t\t\t\t\t\tsortDirection={orderBy === headCell.id ? order : false} >\r\n\t\t\t\t\t\t\t\t<TableSortLabel\r\n\t\t\t\t\t\t\t\t\tactive={orderBy === headCell.id}\r\n\t\t\t\t\t\t\t\t\tdirection={orderBy === headCell.id ? order : 'asc'}\r\n\t\t\t\t\t\t\t\t\tonClick={createSortHandler(headCell.id)} >\r\n\t\t\t\t\t\t\t\t\t{headCell.label}\r\n\t\t\t\t\t\t\t\t\t{orderBy === headCell.id ? (\r\n\t\t\t\t\t\t\t\t\t\t<span className={classes.visuallyHidden} >\r\n\t\t\t\t\t\t\t\t\t\t\t{order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t) : null}\r\n\t\t\t\t\t\t\t\t</TableSortLabel>\r\n\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t})}\r\n\r\n\t\t\t</TableRow>\r\n\t\t</TableHead>\r\n\t);\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n\tclasses: PropTypes.object.isRequired,\r\n\tnumSelected: PropTypes.number.isRequired,\r\n\tonRequestSort: PropTypes.func.isRequired,\r\n\tonSelectAllClick: PropTypes.func.isRequired,\r\n\torder: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n\torderBy: PropTypes.string.isRequired,\r\n\trowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst EnhancedTableToolbar = (props) => {\r\n\tconst { numSelected, title, handleNewOpen, handleDelOpen, handleSearch, keyword, setKeyword } = props;\r\n\r\n\tconst useToolbarStyles = makeStyles((theme) => ({\r\n\t\troot: {\r\n\t\t\tpaddingLeft: theme.spacing(2),\r\n\t\t\tpaddingRight: theme.spacing(1),\r\n\t\t},\r\n\t\thighlight:\r\n\t\t\ttheme.palette.type === 'light'\r\n\t\t\t\t? {\r\n\t\t\t\t\tcolor: theme.palette.secondary.main,\r\n\t\t\t\t\tbackgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n\t\t\t\t}\r\n\t\t\t\t: {\r\n\t\t\t\t\tcolor: theme.palette.text.primary,\r\n\t\t\t\t\tbackgroundColor: theme.palette.secondary.dark,\r\n\t\t\t\t},\r\n\t\ttitle: {\r\n\t\t\tflex: '1 1 100%',\r\n\t\t},\r\n\t}));\r\n\r\n\tconst classes = useToolbarStyles();\r\n\r\n\treturn (\r\n\t\t<Toolbar\r\n\t\t\tclassName={clsx(classes.root, {\r\n\t\t\t\t[classes.highlight]: numSelected > 0,\r\n\t\t\t})}\r\n\t\t>\r\n\t\t\t{numSelected > 0 ? (\r\n\t\t\t\t<Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\r\n\t\t\t\t\t{numSelected} 選択中\r\n\t\t\t\t</Typography>\r\n\t\t\t) : (\r\n\t\t\t\t\t<Typography className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\r\n\t\t\t\t\t\t{title}\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t)}\r\n\r\n\t\t\t{numSelected > 0 ? (\r\n\t\t\t\t<Tooltip title=\"削除\">\r\n\t\t\t\t\t<IconButton aria-label=\"選択した項目を削除\" onClick={handleDelOpen}>\r\n\t\t\t\t\t\t<DeleteIcon />\r\n\t\t\t\t\t</IconButton>\r\n\t\t\t\t</Tooltip>\r\n\t\t\t) : (\r\n\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t<Search handleSearch={handleSearch} keywork={keyword} setKeyword={setKeyword} />\r\n\t\t\t\t\t\t<Tooltip title=\"新規作成\">\r\n\t\t\t\t\t\t\t<IconButton onClick={handleNewOpen} aria-label=\"新規データ追加\">\r\n\t\t\t\t\t\t\t\t<AddIcon />\r\n\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t)}\r\n\t\t</Toolbar>\r\n\t);\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n\tnumSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst EnhancedTableCell = (props) => {\r\n\tconst { headCells, row, selected, labelId, setSelected, history, handleClickDetail, getSelectionValue, getStringFromDateGrid } = props;\r\n\r\n\tconst handleToAboutPage = (link) => {\r\n\t\thistory.push(link);\r\n\t}\r\n\r\n\tconst handleClickCheck = (event, id) => {\r\n\t\tconst selectedIndex = selected.indexOf(id);\r\n\t\tlet newSelected = [];\r\n\r\n\t\tif (selectedIndex === -1) {\r\n\t\t\tnewSelected = newSelected.concat(selected, id);\r\n\t\t} else if (selectedIndex === 0) {\r\n\t\t\tnewSelected = newSelected.concat(selected.slice(1));\r\n\t\t} else if (selectedIndex === selected.length - 1) {\r\n\t\t\tnewSelected = newSelected.concat(selected.slice(0, -1));\r\n\t\t} else if (selectedIndex > 0) {\r\n\t\t\tnewSelected = newSelected.concat(\r\n\t\t\t\tselected.slice(0, selectedIndex),\r\n\t\t\t\tselected.slice(selectedIndex + 1),\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\tsetSelected(newSelected);\r\n\t};\r\n\r\n\tconst isSelected = (id) => selected.indexOf(id) != -1;\r\n\treturn headCells.map(\r\n\t\t(elem) => {\r\n\t\t\tif(elem.show  || elem.type == 'special'){\r\n\t\t\t\tif (elem.type == \"special\") {\r\n\t\t\t\t\tif (elem.id == \"_checkBox\") {\r\n\t\t\t\t\t\tconst isItemSelected = isSelected(row.id);\r\n\t\t\t\t\t\treturn <TableCell padding=\"checkbox\">\r\n\t\t\t\t\t\t\t<Checkbox\r\n\t\t\t\t\t\t\t\tchecked={isItemSelected}\r\n\t\t\t\t\t\t\t\tonClick={(event) => handleClickCheck(event, row.id)}\r\n\t\t\t\t\t\t\t\tinputProps={{ 'aria-labelledby': labelId }}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t} else if (elem.id == \"_linkBtn\") {\r\n\t\t\t\t\t\treturn <TableCell padding=\"checkbox\">\r\n\t\t\t\t\t\t\t<Tooltip title=\"Edit\">\r\n\t\t\t\t\t\t\t\t<IconButton aria-label=\"詳細ページへ\">\r\n\t\t\t\t\t\t\t\t\t<SubjectIcon onClick={() => handleToAboutPage(elem.link)} />\r\n\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t} else if (elem.id == \"_editBtn\") {\r\n\t\t\t\t\t\treturn <TableCell padding=\"checkbox\">\r\n\t\t\t\t\t\t\t<Tooltip title=\"Edit\">\r\n\t\t\t\t\t\t\t\t<IconButton aria-label=\"編集\">\r\n\t\t\t\t\t\t\t\t\t<EditIcon onClick={handleClickDetail} />\r\n\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (elem.type === \"prcDate\" || elem.type === \"date\" || elem.type === 'dateTime') {\r\n\t\t\t\t\treturn <TableCell align={elem.numeric ? 'right' : 'left'}>\r\n\t\t\t\t\t\t{getStringFromDateGrid(row[elem.field], elem.type)}\r\n\t\t\t\t\t</TableCell>\r\n\t\t\t\t} else if(elem.type === \"selection\"){\r\n\t\t\t\t\treturn <TableCell align={elem.numeric ? 'right' : 'left'}>\r\n\t\t\t\t\t\t{getSelectionValue(row[elem.field], elem.selectionEnum)}\r\n\t\t\t\t\t</TableCell>\r\n\t\t\t\t} else if(elem.type === 'number' || elem.type === 'price'){\r\n\t\t\t\t\treturn \t<TableCell align={elem.numeric ? 'right' : 'left'}>\r\n\t\t\t\t\t\t\t\t<NumberFormat\r\n\t\t\t\t\t\t\t\t\t\tvalue={row[elem.field]}\r\n\t\t\t\t\t\t\t\t\t\tthousandSeparator\r\n\t\t\t\t\t\t\t\t\t\tdisplayType=\"text\"\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\treturn <TableCell align={elem.numeric ? 'right' : 'left'}>{row[elem.field]}</TableCell>\r\n\t\t\t}\r\n\t\t}\r\n\t);\r\n};\r\n\r\n\r\n\r\n\r\nconst EnhancedTable = (props) => {\r\n\tconst { table, header, title, history } = props;\r\n\tconst apiUrl = '/api/' + table + '/'\r\n\tconst [headCells, setHeadCells] = useState(header);\r\n\tconst [focus, setFocus] = useState(null);\r\n\tconst [isNotNew, setIsNotNew] = useState(true);\r\n\tconst [order, setOrder] = useState('desc');\r\n\tconst [orderBy, setOrderBy] = useState('id');\r\n\tconst [selected, setSelected] = useState([]);\r\n\tconst [page, setPage] = useState(0);\r\n\t//\tconst [dense, setDense] = React.useState(true);\r\n\tconst dense = true;\r\n\tconst [rowsPerPage, setRowsPerPage] = useState(5);\r\n\tconst [open, setOpen] = useState(false);\r\n\tconst [delOpen, setDelOpen] = useState(false);\r\n\tconst [results, setResults] = useState([]);\r\n\tconst [keyword, setKeyword] = useState(\"\");\r\n\tconst [selection, setSelection] = useState({});\r\n\r\n\tconst useStyles = makeStyles((theme) => ({\r\n\t\troot: {\r\n\t\t\twidth: '100%',\r\n\t\t},\r\n\t\tpaper: {\r\n\t\t\twidth: '100%',\r\n\t\t\tmarginBottom: theme.spacing(2),\r\n\t\t},\r\n\t\ttable: {\r\n\t\t\tminWidth: 750,\r\n\t\t},\r\n\t\tvisuallyHidden: {\r\n\t\t\tborder: 0,\r\n\t\t\tclip: 'rect(0 0 0 0)',\r\n\t\t\theight: 1,\r\n\t\t\tmargin: -1,\r\n\t\t\toverflow: 'hidden',\r\n\t\t\tpadding: 0,\r\n\t\t\tposition: 'absolute',\r\n\t\t\ttop: 20,\r\n\t\t\twidth: 1,\r\n\t\t},\r\n\t}));\r\n\r\n\tconst classes = useStyles();\r\n\r\n\tuseEffect(() => {\r\n\t\tinitializeTable(apiUrl);\r\n\t}, [])\r\n\r\n\tconst getStringFromDateGrid = (d, type) => {\r\n\t\tif (!d) {\r\n\t\t\treturn \"\";\r\n\t\t}\r\n\t\tconst date = new Date(d);\r\n\t\tif (type === 'dateTime' || type === 'prcDate') {\r\n\t\t\treturn date.toLocaleString();\r\n\t\t} else if (type === 'date') {\r\n\t\t\treturn date.toLocaleDateString();\r\n\t\t}\r\n\t\treturn d;\r\n\t}\r\n\r\n\tconst getStringFromDate = (d, type) => {\r\n\t\tlet date = new Date(d);\r\n\t\tif (!d) {\r\n\t\t\t\treturn \"\";\r\n\t\t}\r\n\t\tif(type === 'time'){\r\n\t\t\treturn d;\r\n\t\t}\r\n\t\t\r\n\t\tlet year_str = date.getFullYear();\r\n\t\tlet month_str = 1 + date.getMonth();\r\n\t\tlet day_str = date.getDate();\r\n\t\tlet hour_str = date.getHours();\r\n\t\tlet minute_str = date.getMinutes();\r\n\t\tlet second_str = date.getSeconds();\r\n\r\n\t\tmonth_str = ('0' + month_str).slice(-2);\r\n\t\tday_str = ('0' + day_str).slice(-2);\r\n\t\thour_str = ('0' + hour_str).slice(-2);\r\n\t\tminute_str = ('0' + minute_str).slice(-2);\r\n\t\tsecond_str = ('0' + second_str).slice(-2);\r\n\r\n\t\tlet format_str = 'YYYY-MM-DDThh:mm:ss';\r\n\r\n\t\tif (type === 'dateTime' || type === 'prcDate') {\r\n\t\t\tformat_str = format_str.replace(/YYYY/g, year_str);\r\n\t\t\tformat_str = format_str.replace(/MM/g, month_str);\r\n\t\t\tformat_str = format_str.replace(/DD/g, day_str);\r\n\t\t\tformat_str = format_str.replace(/hh/g, hour_str);\r\n\t\t\tformat_str = format_str.replace(/mm/g, minute_str);\r\n\t\t\tformat_str = format_str.replace(/ss/g, second_str);\r\n\t\t} else if (type === 'date') {\r\n\t\t\tformat_str = 'YYYY-MM-DD';\r\n\t\t\tformat_str = format_str.replace(/YYYY/g, year_str);\r\n\t\t\tformat_str = format_str.replace(/MM/g, month_str);\r\n\t\t\tformat_str = format_str.replace(/DD/g, day_str);\r\n//\t\t} else if (type == 'time') {\r\n//\t\t\tformat_str = 'hh:mm';\r\n//\t\t\tformat_str = format_str.replace(/hh/g, hour_str);\r\n//\t\t\tformat_str = format_str.replace(/mm/g, minute_str);\r\n\t\t}\r\n\r\n\t\treturn format_str;\r\n\t};\r\n\r\n\r\n\r\n\tconst getSelectionValue = (field, enumKey) => {\r\n\t\tif(field !== null){\r\n\t\t\treturn selection[enumKey][field].dispName;\r\n\t\t} else {\r\n\t\t\treturn \"\";\r\n\t\t}\r\n\t}\r\n\r\n\tconst handleSearch = () => {\r\n//\t\tinitializeTable(apiUrl);\r\n\t\tif (keyword.length > 0) {\r\n\t\t\tconst newResults = [];\r\n\t\t\tresults.forEach(\r\n\t\t\t\t(result) => {\r\n\t\t\t\t\tlet match = false;\r\n\t\t\t\t\theadCells.forEach((head) => {\r\n\t\t\t\t\t\tif (!match) {\r\n\t\t\t\t\t\t\tif (checkMatch(result[head.field], head, keyword)){\r\n\t\t\t\t\t\t\t\tmatch = true;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t\tif(match) {\r\n\t\t\t\t\t\tnewResults.push(result);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t\tsetResults(newResults);\r\n\t\t} else {\r\n\t\t\tinitializeTable(apiUrl);\r\n\t\t}\r\n\t}\r\n\r\n\tconst checkMatch = (cellValue, head, keyword) => {\r\n\t\tif (!head.show) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif(cellValue == null){\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif(head.type === \"id\" && head.type === 'special'){\r\n\t\t\treturn false;\r\n\t\t} else if (head.type === 'selection') {\r\n\t\t\tlet selVal = getSelectionValue(cellValue, head.selectionEnum);\r\n\t\t\tif(selVal == null){\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\treturn selVal.toLowerCase().includes(keyword.toLowerCase());\r\n\t\t} else if (head.type === 'prcDate' || head.type === 'date' || head.type === 'dateTime') {\r\n\t\t\tlet dayVal = getStringFromDateGrid(cellValue, head.type);\r\n\t\t\tif(dayVal == null){\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\treturn dayVal.includes(keyword);\r\n\t\t} else {\r\n\t\t\treturn cellValue.toString().toLowerCase().includes(keyword.toLowerCase());\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t}\r\n\r\n\tconst handleRequestSort = (event, property) => {\r\n\t\tconst isAsc = orderBy === property && order === 'asc';\r\n\t\tsetOrder(isAsc ? 'desc' : 'asc');\r\n\t\tsetOrderBy(property);\r\n\t};\r\n\r\n\tconst handleSelectAllClick = (event) => {\r\n\t\tif (event.target.checked) {\r\n\t\t\tconst newSelecteds = results.map((n) => n.id);\r\n\t\t\tsetSelected(newSelecteds);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tsetSelected([]);\r\n\t};\r\n\r\n\tconst descendingComparator = (a, b, orderBy) => {\r\n\t\tif (b[orderBy] < a[orderBy]) {\r\n\t\t\treturn -1;\r\n\t\t}\r\n\t\tif (b[orderBy] > a[orderBy]) {\r\n\t\t\treturn 1;\r\n\t\t}\r\n\t\treturn 0;\r\n\t}\r\n\r\n\tconst getComparator = (order, orderBy) => {\r\n\t\treturn order === 'desc'\r\n\t\t\t? (a, b) => descendingComparator(a, b, orderBy)\r\n\t\t\t: (a, b) => -descendingComparator(a, b, orderBy);\r\n\t}\r\n\r\n\tconst stableSort = (array, comparator) => {\r\n\t\tconst stabilizedThis = array.map((el, index) => [el, index]);\r\n\t\tstabilizedThis.sort((a, b) => {\r\n\t\t\tconst order = comparator(a[0], b[0]);\r\n\t\t\tif (order !== 0) return order;\r\n\t\t\treturn a[1] - b[1];\r\n\t\t});\r\n\t\treturn stabilizedThis.map((el) => el[0]);\r\n\t}\r\n\r\n\tconst handleChangePage = (event, newPage) => {\r\n\t\tsetPage(newPage);\r\n\t};\r\n\r\n\tconst handleChangeRowsPerPage = (event) => {\r\n\t\tsetRowsPerPage(parseInt(event.target.value, 10));\r\n\t\tsetPage(0);\r\n\t};\r\n\r\n\tconst handleClickDetail = (row) => {\r\n\t\tsetFocus(row);\r\n\t\tsetIsNotNew(true);\r\n\t\tsetOpen(true);\r\n\t};\r\n\r\n\tconst handleNewOpen = () => {\r\n\t\tconst newObj = new Object();\r\n\t\theadCells.forEach(\r\n\t\t\t(head) => {\r\n\t\t\t\tif (head.type != 'special') {\r\n\t\t\t\t\tnewObj[head.field] = null;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t);\r\n\t\tsetFocus(newObj);\r\n\t\tsetIsNotNew(false);\r\n\t\tsetOpen(true);\r\n\t};\r\n\r\n\tconst handleDeleteList = () => {\r\n\t\tconst headers = {\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t};\r\n\t\taxios.delete(apiUrl, { data: selected, headers })\r\n\t\t\t.then(res => {\r\n\t\t\t\tsetSelected([]);\r\n\t\t\t\tfinalize();\r\n\t\t\t})\r\n\t\t\t.catch(err => new Error(err))\r\n\t}\r\n\r\n\tconst initializeTable = (apiUrl) => {\r\n\t\taxios.get('/api/head_cell/' + table)\r\n\t\t\t.then(res => {\r\n\t\t\t\tsetHeadCells(header.concat(res.data));\r\n\t\t\t\taxios.get(apiUrl)\r\n\t\t\t\t\t.then(res2 => {\r\n\t\t\t\t\t\tif(!Object.keys(selection).length){\r\n\t\t\t\t\t\t\tres.data.map((head) => {\r\n\t\t\t\t\t\t\t\tif(!!head.selectionEnum){\r\n\t\t\t\t\t\t\t\t\taxios.get('/api/selection/'+ head.selectionEnum)\r\n\t\t\t\t\t\t\t\t\t\t.then(res3 => {\r\n\t\t\t\t\t\t\t\t\t\t\tsetSelection(Object.assign(selection, res3.data));\r\n\t\t\t\t\t\t\t\t\t\t\tsetResults(res2.data);\r\n\t\r\n\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t\t.catch(err => new Error(err));\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tsetResults(res2.data);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.catch(err => new Error(err));\r\n\r\n\r\n\r\n\t\t\t}).catch(err => new Error(err))\r\n\t};\r\n\r\n\tconst finalize = () => {\r\n\t\tinitializeTable(apiUrl);\r\n\t\thandleClose();\r\n\t\thandleDelClose();\r\n\t}\r\n\r\n\tconst handleClose = () => {\r\n\t\tsetOpen(false);\r\n\t}\r\n\r\n\tconst handleDelOpen = () => {\r\n\t\tsetDelOpen(true);\r\n\t}\r\n\r\n\tconst handleDelClose = () => {\r\n\t\tsetDelOpen(false);\r\n\t}\r\n\r\n\tconst isSelected = (id) => selected.indexOf(id) !== -1;\r\n\tconst emptyRows = rowsPerPage - Math.min(rowsPerPage, results.length - page * rowsPerPage);\r\n\treturn (\r\n\t\t<div className={classes.root}>\r\n\t\t\t<Paper className={classes.paper}>\r\n\t\t\t\t<EnhancedTableToolbar\r\n\t\t\t\t\tnumSelected={selected.length}\r\n\t\t\t\t\ttitle={title}\r\n\t\t\t\t\thandleNewOpen={handleNewOpen}\r\n\t\t\t\t\thandleDelOpen={handleDelOpen}\r\n\t\t\t\t\thandleSearch={handleSearch}\r\n\t\t\t\t\tkeyword={keyword}\r\n\t\t\t\t\tsetKeyword={setKeyword}\r\n\t\t\t\t/>\r\n\t\t\t\t<TableContainer>\r\n\t\t\t\t\t<Table\r\n\t\t\t\t\t\tclassName={classes.table}\r\n\t\t\t\t\t\taria-labelledby=\"tableTitle\"\r\n\t\t\t\t\t\tsize={dense ? 'small' : 'medium'}\r\n\t\t\t\t\t\taria-label=\"enhanced table\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<EnhancedTableHead\r\n\t\t\t\t\t\t\tclasses={classes}\r\n\t\t\t\t\t\t\tnumSelected={selected.length}\r\n\t\t\t\t\t\t\torder={order}\r\n\t\t\t\t\t\t\torderBy={orderBy}\r\n\t\t\t\t\t\t\tonSelectAllClick={handleSelectAllClick}\r\n\t\t\t\t\t\t\tonRequestSort={handleRequestSort}\r\n\t\t\t\t\t\t\trowCount={results.length}\r\n\t\t\t\t\t\t\theadCells={headCells}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<TableBody>\r\n\t\t\t\t\t\t\t{stableSort(results, getComparator(order, orderBy))\r\n\t\t\t\t\t\t\t\t.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n\t\t\t\t\t\t\t\t.map((row, index) => {\r\n\t\t\t\t\t\t\t\t\tconst isItemSelected = isSelected(row.id);\r\n\t\t\t\t\t\t\t\t\tconst labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t<TableRow\r\n\t\t\t\t\t\t\t\t\t\t\thover\r\n\t\t\t\t\t\t\t\t\t\t\trole=\"checkbox\"\r\n\t\t\t\t\t\t\t\t\t\t\taria-checked={isItemSelected}\r\n\t\t\t\t\t\t\t\t\t\t\ttabIndex={-1}\r\n\t\t\t\t\t\t\t\t\t\t\tkey={row.id}\r\n\t\t\t\t\t\t\t\t\t\t\tselected={isItemSelected} >\r\n\t\t\t\t\t\t\t\t\t\t\t<EnhancedTableCell\r\n\t\t\t\t\t\t\t\t\t\t\t\theadCells={headCells}\r\n\t\t\t\t\t\t\t\t\t\t\t\trow={row}\r\n\t\t\t\t\t\t\t\t\t\t\t\tselected={selected}\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabelId={labelId}\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetSelected={setSelected}\r\n\t\t\t\t\t\t\t\t\t\t\t\thistory={history}\r\n\t\t\t\t\t\t\t\t\t\t\t\thandleClickDetail={() => (handleClickDetail(row))}\r\n\t\t\t\t\t\t\t\t\t\t\t\tgetSelectionValue={getSelectionValue}\r\n\t\t\t\t\t\t\t\t\t\t\t\tgetStringFromDateGrid={getStringFromDateGrid}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t{emptyRows > 0 && (\r\n\t\t\t\t\t\t\t\t<TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\r\n\t\t\t\t\t\t\t\t\t<TableCell colSpan={6} />\r\n\t\t\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</TableBody>\r\n\t\t\t\t\t</Table>\r\n\t\t\t\t</TableContainer>\r\n\t\t\t\t<TablePagination\r\n\t\t\t\t\trowsPerPageOptions={[5, 10, 25]}\r\n\t\t\t\t\tcomponent=\"div\"\r\n\t\t\t\t\tcount={results.length}\r\n\t\t\t\t\trowsPerPage={rowsPerPage}\r\n\t\t\t\t\tpage={page}\r\n\t\t\t\t\tonChangePage={handleChangePage}\r\n\t\t\t\t\tonChangeRowsPerPage={handleChangeRowsPerPage}\r\n\t\t\t\t/>\r\n\t\t\t</Paper>\r\n\r\n\r\n\t\t\t<Dialog key=\"detailDialog\"\r\n\t\t\t\topen={open}\r\n\t\t\t\tonClose={finalize}\r\n\t\t\t\taria-labelledby=\"form-dialog-title\"\r\n\t\t\t\tmaxWidth=\"lg\"\r\n\t\t\t>\r\n\t\t\t\t<DialogTitle id=\"form-dialog-title\">{title}</DialogTitle>\r\n\t\t\t\t<DialogContent>\r\n\t\t\t\t\t<EnhancedForm\r\n\t\t\t\t\t\tresult={focus}\r\n\t\t\t\t\t\theadCells={headCells}\r\n\t\t\t\t\t\ttitle={null}\r\n\t\t\t\t\t\tsetResult={setFocus}\r\n\t\t\t\t\t\tfinalize={finalize}\r\n\t\t\t\t\t\tisNew={!isNotNew}\r\n\t\t\t\t\t\tapiUrl={apiUrl}\r\n\t\t\t\t\t\tgetSelectionValue={getSelectionValue}\r\n\t\t\t\t\t\tgetStringFromDate={getStringFromDate}\r\n\t\t\t\t\t\tselection={selection}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</DialogContent>\r\n\t\t\t\t<DialogActions>\r\n\t\t\t\t\t<Button onClick={finalize} color=\"primary\">\r\n\t\t\t\t\t\t閉じる\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</DialogActions>\r\n\t\t\t</Dialog>\r\n\r\n\t\t\t<Dialog\r\n\t\t\t\topen={delOpen}\r\n\t\t\t\tkeepMounted\r\n\t\t\t\tonClose={handleDelClose}\r\n\t\t\t\taria-labelledby=\"alert-dialog-slide-title\"\r\n\t\t\t\taria-describedby=\"alert-dialog-slide-description\"\r\n\t\t\t>\r\n\t\t\t\t<DialogTitle id=\"delete-dialog\">{\"削除確認\"}</DialogTitle>\r\n\t\t\t\t<DialogContent>\r\n\t\t\t\t\t<DialogContentText id=\"alert-dialog-slide-description\">\r\n\t\t\t\t\t\t選択した項目を削除します。よろしいですか？\r\n\t\t\t\t</DialogContentText>\r\n\t\t\t\t</DialogContent>\r\n\t\t\t\t<DialogActions>\r\n\t\t\t\t\t<Button onClick={handleDeleteList} color=\"primary\">\r\n\t\t\t\t\t\tはい\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<Button onClick={handleDelClose} color=\"primary\">\r\n\t\t\t\t\t\tキャンセル\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</DialogActions>\r\n\t\t\t</Dialog>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default withRouter(EnhancedTable)\r\n\r\n\r\n","import React from 'react';\n\nimport EnhancedTable from './../components/common/EnhancedTable';\nimport Container from '@material-ui/core/Container';\nimport { withRouter } from 'react-router';\n\nconst CustomerPage = () => {\n\n\tconst tableOption = {\n\t\theader: [\n\t\t\t{ id: '_checkBox', type: \"special\", numeric: false,  label: '', show: true},\n\t\t\t{ id: '_linkBtn', type: \"special\", numeric: false, link: \"/about\", show: true },\n\t\t\t{ id: '_editBtn', type: \"special\", numeric: false, show: true },\n\t\t],\n\t\ttable: \"company_info\",\n\t\ttitle: \"CompanyInfo\",\n\t}\n\tconst tableOption2 = {\n\t\theader: [\n\t\t\t{ id: '_editBtn', type: \"special\", numeric: false, show: true},\n\t\t],\n\t\ttable: \"contact\",\n\t\ttitle: \"テスト\",\n\t}\n\n\treturn (\n\t\t<Container maxWidth=\"lg\">\n\t\t\t<EnhancedTable {...tableOption} />\n\t\t\t<EnhancedTable {...tableOption2} />\n\t\t</Container>\n\t);\n}\n\nexport default withRouter(CustomerPage);\n\n//TODO\n/*\n検索窓\n・そもそもDBの親子が取れない問題（とりあえず一回置いておく）\n・顧客情報やる？\n・木札やる？\n・イカしたテーマ\n\n\n*/\n","import axios from 'axios'\nimport React, { useState, useEffect } from 'react';\nimport EnhancedTable from './../components/common/EnhancedTable';\nimport Container from '@material-ui/core/Container';\nimport { withRouter } from 'react-router';\n\nconst CustomerPage2 = () => {\n\tconst [result, setResult] = useState([]);\n\tconst tableOption = {\n\t\theader: [\n\t\t\t{ id: '_detailBtn', numeric: false, disablePadding: true, label: '' , link: \"/\"},\n\t\t\t{ id: '_checkBox', numeric: false, disablePadding: true, label: '' },\n\t\t\t{ id: 'id', numeric: true, disablePadding: true, label: 'ID' },\n\t\t\t{ id: 'companyName', numeric: false, disablePadding: false, label: 'companyName' },\n\t\t\t{ id: 'companySuffix', numeric: false, disablePadding: false, label: 'companySuffix' },\n\t\t\t{ id: 'companyPrefix', numeric: false, disablePadding: false, label: 'companyPrefix' },\n\t\t],\n\t\tresults: result,\n\t\ttitle: \"customer2\"\n\t}\n\n\tuseEffect(() => {\n\t\taxios.get(\"/api/company_info\")\n\t\t\t.then(res => setResult(res.data))\n\t\t\t.catch(err => new Error(err))\n\t}, [])\n\n\treturn (\n\t\t<Container maxWidth=\"md\">\n\t\t\t<EnhancedTable {...tableOption} />\n\t\t</Container>\n\t);\n}\n\nexport default withRouter(CustomerPage2);\n\n","import React from 'react';\n\nimport EnhancedTable from './../components/common/EnhancedTable';\nimport Container from '@material-ui/core/Container';\nimport { withRouter } from 'react-router';\n\nconst SamplePage = () => {\n\n\tconst tableOption = {\n\t\theader: [\n\t\t\t{ id: '_checkBox', type: \"special\", numeric: false,  label: '', show: true},\n\t\t\t{ id: '_linkBtn', type: \"special\", numeric: false, link: \"/\", show: true },\n\t\t\t{ id: '_editBtn', type: \"special\", numeric: false, show: true },\n\t\t],\n\t\ttable: \"sample_entity\",\n\t\ttitle: \"SamplePage\",\n\t}\n\n\treturn (\n\t\t<Container maxWidth=\"lg\">\n\t\t\t<EnhancedTable {...tableOption} />\n\t\t</Container>\n\t);\n}\n\nexport default withRouter(SamplePage);\n\n//TODO\n/*\n検索窓\n・そもそもDBの親子が取れない問題（とりあえず一回置いておく）\n・顧客情報やる？\n・木札やる？\n・イカしたテーマ\n\n\n*/\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nclass Navbar extends React.Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<Link to=\"/\" >TopPage</Link>\r\n\t\t\t\t<Link to=\"/About\">About</Link>\r\n\t\t\t\t<Link to=\"/Sample\">Sample Page</Link>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\n\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider'\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport blue from '@material-ui/core/colors/blue';\nimport red from '@material-ui/core/colors/red';\n\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport CustomerPage from './customer/CustomerPage'\nimport CustomerPage2 from './customer/CustomerPage2'\nimport SamplePage from './customer/SamplePage'\nimport Navbar from './components/common/Navbar'\n\n\nconst theme = createMuiTheme({\n\tpalette: {\n\t\ttype: 'light',\n\t\tprimary: blue,\n\t\tsecondary: red\n\t},\n});\n\nconst App = () => {\n\treturn (\n\t\t<MuiThemeProvider theme={theme}>\n\t\t\t<Router>\n\t\t\t\t<Navbar /><hr />\n\t\t\t\t<Route exact path='/' component={CustomerPage} />\n\t\t\t\t<Route path='/About' component={CustomerPage2} />\n\t\t\t\t<Route path='/Sample' component={SamplePage} />\n\t\t\t</Router>\n\t\t</MuiThemeProvider>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}